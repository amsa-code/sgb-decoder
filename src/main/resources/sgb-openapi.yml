openapi: 3.0.0
info:
  version: '1.0'
  title: Beacon Decoder
  description: Beacon decoding for First Generation and Second Generation Beacon HexIds and Detection messages
    
paths:
  /beacon/hexId/{hex}/decode:
    get:
      summary: Decodes the given hex code (23 characters) into its constituents
      description: |
        Decodes the given hex code (23 characters) into its constituents
      parameters:
        - $ref: '#/components/parameters/hexId'
      responses:
        '200':    # status code
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Beacon23HexId'
        '400':    
          $ref: '#/components/responses/BadRequest'
        '500':    
          $ref: '#/components/responses/ServerError'                
                
  /beacon/detectionHex/{hex}/decode:
    get:
      summary: Decodes the given SGB detection hex code (51 characters) into its constituents
      description: |
        Decodes the given SGB detection hex code (51 characters) into its constituents
      parameters:
        - $ref: '#/components/parameters/detectionHex'
      responses:
        '200':    # status code
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Detection'
        '400':    
          $ref: '#/components/responses/BadRequest'
        '500':    
          $ref: '#/components/responses/ServerError'                                

components:
  parameters:
    hexId:
      name: hex
      in: path
      required: true
      description: The hexId to decode
      schema:
        type: string
        pattern: '[A-Za-z0-9]{23}'
    detectionHex:
      name: hex
      in: path
      required: true
      description: The detectionHex to decode
      schema:
        type: string
        pattern: '[A-Za-z0-9]{51}'
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServerError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'             
  schemas:
    Error:
      type: object
      properties:
        errorMessage: 
          type: string
        errorType:
          type: string
        stackTrace:
          type: array
          items: 
            type: string
        cause:
          $ref: '#/components/schemas/Error'   
    Detection:
      type: object
      properties:
        tac:
          type: integer
        serialNo:
          type: integer
        countryCode:
          type: integer
        hasAtLeastOneEnabledHomingSignal:
          type: boolean
        hasEnabledRls:
          type: boolean
        testProtocolMessage:
          type: boolean
        encodedGnssPosition:
          "$ref": "#/components/schemas/EncodedGnssPosition"
        vesselId:
          "$ref": "#/components/schemas/VesselId"
        beaconType:
          "$ref": "#/components/schemas/BeaconType"
        rotatingField:
          "$ref": "#/components/schemas/RotatingField"
        beacon23HexId:
          type: string
        beacon15HexId:
          type: string
      required:
      - tac
      - serialNo
      - countryCode
      - hasAtLeastOneEnabledHomingSignal
      - hasEnabledRls
      - testProtocolMessage
      - beaconType
      - rotatingField
      - beacon23HexId
      - beacon15HexId
    AircraftOperatorAndSerialNumber:
      type: object
      properties:
        vesselIdType:
          "$ref": "#/components/schemas/VesselIdType"
        aircraftOperatorDesignator:
          type: string
        serialNumber:
          type: integer
      required:
      - vesselIdType
      - aircraftOperatorDesignator
      - serialNumber
    Mmsi:
      type: object
      properties:
        vesselIdType:
          "$ref": "#/components/schemas/VesselIdType"
        mmsi:
          type: integer
        epirbMmsi:
          type: integer
      required:
      - vesselIdType
    ObjectiveRequirements:
      type: object
      properties:
        rotatingFieldType:
          "$ref": "#/components/schemas/RotatingFieldType"
        elapsedTimeSinceActivationHours:
          type: integer
        timeSinceLastEncodedLocationMinutes:
          type: integer
        altitudeEncodedLocationMetres:
          type: integer
        dilutionPrecisionHdop:
          "$ref": "#/components/schemas/Range"
        dilutionPrecisionVdop:
          "$ref": "#/components/schemas/Range"
        activationMethod:
          "$ref": "#/components/schemas/ActivationMethod"
        remainingBatteryCapacityPercent:
          "$ref": "#/components/schemas/Range"
        gnssStatus:
          "$ref": "#/components/schemas/GnssStatus"
      required:
      - rotatingFieldType
      - elapsedTimeSinceActivationHours
      - timeSinceLastEncodedLocationMinutes
      - altitudeEncodedLocationMetres
      - activationMethod
      - gnssStatus
    RlsType:
      type: string
      enum:
      - ACKNOWLEDGEMENT_SERVICE
      - TEST_SERVICE
      - OTHER
    DeactivationMethod:
      type: string
      enum:
      - MANUAL_DEACTIVATION_BY_USER
      - AUTOMATIC_DEACTIVATION_BY_EXTERNAL_MEANS
      - OTHER
    ActivationMethod:
      type: string
      enum:
      - MANUAL_ACTIVATION_BY_USER
      - AUTOMATIC_ACTIVATION_BY_BEACON
      - AUTOMATIC_ACTIVATION_BY_EXTERNAL_MEANS
      - OTHER
    BeaconFeedback:
      type: object
      properties:
        rlmType1FeedbackReceived:
          type: boolean
        rlmType2FeedbackReceived:
          type: boolean
        rlsType:
          "$ref": "#/components/schemas/RlsType"
        shortRlmParametersBitString:
          type: string
      required:
      - rlmType1FeedbackReceived
      - rlmType2FeedbackReceived
      - rlsType
    UnknownRotatingField:
      type: object
      properties:
        rotatingFieldType:
          "$ref": "#/components/schemas/RotatingFieldType"
        bitString:
          type: string
      required:
      - rotatingFieldType
      - bitString
    Range:
      type: object
      properties:
        min:
          "$ref": "#/components/schemas/RangeEnd"
        max:
          "$ref": "#/components/schemas/RangeEnd"
    TriggeringEvent:
      type: string
      enum:
      - MANUAL_ACTIVATION_BY_CREW
      - G_SWITCH_OR_DEFORMATION_ACTIVATION
      - AUTOMATIC_ACTIVATION_FROM_AVIONICS_OR_TRIGGERING_SYSTEM
      - OTHER
    RadioCallSign:
      type: object
      properties:
        vesselIdType:
          "$ref": "#/components/schemas/VesselIdType"
        value:
          type: string
      required:
      - vesselIdType
    RangeEnd:
      type: object
      properties:
        value:
          type: integer
        exclusive:
          type: boolean
      required:
      - value
      - exclusive
    Aviation24BitAddress:
      type: object
      properties:
        vesselIdType:
          "$ref": "#/components/schemas/VesselIdType"
        addressHex:
          type: string
        aircraftOperatorDesignator:
          type: string
      required:
      - vesselIdType
      - addressHex
    RotatingFieldType:
      type: string
      enum:
      - CANCELLATION
      - ELT_DT_IN_FLIGHT_EMERGENCY
      - NATIONAL_USE
      - OBJECTIVE_REQUIREMENTS
      - RLS
      - UNKNOWN
    VesselId:
      oneOf:
      - "$ref": "#/components/schemas/AircraftOperatorAndSerialNumber"
      - "$ref": "#/components/schemas/AircraftRegistrationMarking"
      - "$ref": "#/components/schemas/Aviation24BitAddress"
      - "$ref": "#/components/schemas/Mmsi"
      - "$ref": "#/components/schemas/RadioCallSign"
    RlsProvider:
      type: string
      enum:
      - GALILEO
      - GLONASS
      - OTHER
    EncodedGnssPosition:
      type: object
      properties:
        lat:
          type: number
        lon:
          type: number
      required:
      - lat
      - lon
    Cancellation:
      type: object
      properties:
        rotatingFieldType:
          "$ref": "#/components/schemas/RotatingFieldType"
        deactivationMethod:
          "$ref": "#/components/schemas/DeactivationMethod"
      required:
      - rotatingFieldType
      - deactivationMethod
    VesselIdType:
      type: string
      enum:
      - AIRCRAFT_OPERATOR_AND_SERIAL_NUMBER
      - AIRCRAFT_REGISTRATION_MARKING
      - AVIATION_24_BIT_ADDRESS
      - MMSI
      - RADIO_CALL_SIGN
    EltDtInFlightEmergency:
      type: object
      properties:
        rotatingFieldType:
          "$ref": "#/components/schemas/RotatingFieldType"
        timeOfLastEncodedLocation:
          type: string
          format: time
        altitudeEncodedLocationMetres:
          type: integer
        triggeringEvent:
          "$ref": "#/components/schemas/TriggeringEvent"
        gnssStatus:
          "$ref": "#/components/schemas/GnssStatus"
        remainingBatteryCapacityPercent:
          "$ref": "#/components/schemas/Range"
      required:
      - rotatingFieldType
      - timeOfLastEncodedLocation
      - altitudeEncodedLocationMetres
      - triggeringEvent
      - gnssStatus
    NationalUse:
      type: object
      properties:
        rotatingFieldType:
          "$ref": "#/components/schemas/RotatingFieldType"
        bitString:
          type: string
      required:
      - rotatingFieldType
      - bitString
    GnssStatus:
      type: string
      enum:
      - NO_FIX
      - LOCATION_2D
      - LOCATION_3D
      - OTHER
    AircraftRegistrationMarking:
      type: object
      properties:
        vesselIdType:
          "$ref": "#/components/schemas/VesselIdType"
        value:
          type: string
      required:
      - vesselIdType
    BeaconType:
      type: string
      enum:
      - ELT_NOT_DT
      - EPIRB
      - PLB
      - ELT_DT
      - SYSTEM
      - OTHER
    RotatingField:
      oneOf:
      - "$ref": "#/components/schemas/Cancellation"
      - "$ref": "#/components/schemas/EltDtInFlightEmergency"
      - "$ref": "#/components/schemas/NationalUse"
      - "$ref": "#/components/schemas/ObjectiveRequirements"
      - "$ref": "#/components/schemas/Rls"
      - "$ref": "#/components/schemas/UnknownRotatingField"
    Rls:
      type: object
      properties:
        rotatingFieldType:
          "$ref": "#/components/schemas/RotatingFieldType"
        canProcessAutomaticallyGeneratedAckRlmType1:
          type: boolean
        canProcessManuallyGeneratedRlm:
          type: boolean
        rlsProvider:
          "$ref": "#/components/schemas/RlsProvider"
        beaconFeedback:
          "$ref": "#/components/schemas/BeaconFeedback"
      required:
      - rotatingFieldType
      - canProcessAutomaticallyGeneratedAckRlmType1
      - canProcessManuallyGeneratedRlm
      - rlsProvider
    Beacon23HexId:
      type: object
      properties:
        countryCode:
          type: integer
        tac:
          type: integer
        serialNumber:
          type: integer
        testProtocolFlag:
          type: boolean
        vesselId:
          "$ref": "#/components/schemas/VesselId"
      required:
      - countryCode
      - tac
      - serialNumber
      - testProtocolFlag

      
